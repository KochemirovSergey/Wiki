### 2.3. Методы и способы решения поставленных задач



#### Архитектура мультиагентой ИИ системы

```mermaid
flowchart LR
 subgraph g1["Прогнозно-аналитическая мультиагентная ИИ система анализа социально-экономических показателей сферы образования"]
        n1["Графовая БД"]--1 Получает данные для ответа за запрос-->g5
         subgraph g5["Агент аналитик </br> инструменты"]
            n4[Подбор или расчет индекса в соотвествии с запросом]
            n5[Построение динамического дашборда по реквизитам индекса]
            n6[Расчет прогноза динамики данных]
         end
         subgraph g3["Агент парсер </br> инструменты"]
            n7[Обработка таблицы]
            n8[Поиск в интеренете]
            n9[Обработка текста]
         end
        g3--1 Добавляет данные поиска в интернете-->n1
        g5--1 Если в БД нет данных-->g3
        g3--2 Ежегодная обработка статистических данных-->n1

  end
```

.

#### Анализ неструктурированных данных



#### Построение полного индекса

```mermaid
graph TD
    subgraph Легенда
        A2(("Количественные узлы")):::quantity
        A3(("Узлы индексов")):::index
        A4(("Полный индекс")):::totalindex
    end

    subgraph Схема
        B1(("Численность преподавателей")):::quantity
        B2(("Численность обучающихся")):::quantity
        B3(("Количество классов")):::quantity
        B4(("__ ")):::quantity
        B5(("__ ")):::quantity
        B6(("__ ")):::quantity
        B7(("__ ")):::quantity
        C1(("Среднее количество учеников на учителя")):::index
        C2(("Среднее количество учеников в классе")):::index
        C3(("__")):::index
        C4(("__")):::index
        C5(("__")):::index
        D1(("Индекс достаточности кадрового обеспечения")):::index
        E1(("Полный индекс")):::totalindex
        B1 --> C1
        B2 --> C1
        B2 --> C2
        B3 --> C2
        B4 --> C3
        B5 --> C3
        B6 --> C3
        B5 --> C4
        B7 --> C4
        C3 --> C5
        C4 --> C5
        C5 --> E1
        C1 --> D1
        C2 --> D1
        D1 --> E1
    end

    classDef ontology fill:#d4b6fa,stroke:#aaa;
    classDef quantity fill:#b6eaff,stroke:#aaa;
    classDef index fill:#c7fddb,stroke:#aaa;
    classDef totalindex fill:#57d17d,stroke:#aaa;
```

В аналитическом смысле прямые количественные данные редко имеют самостоятельную ценность. Например, данные о количестве классов и численности преподавателей сами по себе не предоставляют возможность качественной интерпретации. Однако, при сопоставлении этих сведений с данными о количестве обучающихся, возможно получить информацию о среднем количестве учеников в классе и среднем количестве учеников на одного учителя. Используя данные НПА и педагогических исследований возможно методологически установить граничные значения, которые позволят интерпретировать количественные данные. Например, для среднего количества учеников в классе:
- n <15 – низкая бюджетная эффективность
- 15<n<25 – нормальное значение
- 25<n – избыточное количество учеников, снижается эффективность образовательного процесса

#### Прогнозная модель

_____________

Далее приведен пайплайн процесса реализации прогнозной модели

```mermaid
flowchart TD
    A[Сырые ряды и региональные данные] --"Методы: Интерполяция (линейная, полиномиальная),<br/>Kalman filter, KNN-imputation, Байесовские модели<br/>Инструменты: scikit-learn, statsmodels, PyMC"--> B[Обработка пропущенных значений]
    
    B --"Методы: Bottom-up/Top-down reconciliation,<br/>Padding, Truncation<br/>Инструменты: HierarchicalForecast, Custom padding functions"--> C[Агрегация и нормализация рядов]
    
    C --"Методы: Лаги, средние, сезонность, внешние регрессоры<br/>Инструменты: tsfresh, sktime, FRED API"--> D[Инженерия признаков]
    
    D --"Методы: BSTS (байес. модели), LightGBM, LSTM/NN, ARIMA, Prophet<br/>Инструменты: PyMC, bsts (R), LightGBM, PyTorch, statsmodels"--> E[Обучение моделей]
    
    E --"Методы: Стекинг, взвешенное усреднение, Bayesian Model Averaging (BMA)<br/>Инструменты: scikit-learn, PyMC, XGBoost"--> F[Ансамблирование моделей]
    
    F --"Методы: Time Series Cross-Validation, Bayesian Optimization<br/>Инструменты: sktime, Optuna, scikit-optimize"--> G[Валидация и оптимизация]
    
    G --"Методы: Модельное развертывание, мониторинг<br/>Инструменты: MLflow, Docker, Kubernetes"--> H[Продакшн/Деплой]
    
    H --> I[Реальный прогноз]
```
_______________
Для прогнозной модели используются 3 метода повышения прогноза:
- Сопоставление данных из разных источников в одну серию данных (анализ неструктурированных данных из прошлого раздела функциональных требований)
- Использования связанных показателей (внешние регрессоры)
- Региональные данные (для всех статистических данных есть разбиение федеральных значений на региональные данные, что также можно использовать для повышения точности прогноза)
_______________


#### Поиск количественных данных

```mermaid
graph TD
    %% Начало процесса
    USER_QUERY[Запрос пользователя]

    %% Параллельная обработка
    EMBEDDING[embedding]
    ONTOLOGY_QUERY[Запрос релевантных<br/>онтологий]

    %% RAG процесс
    RAG[RAG по количественным<br/>узлам]

    %% Обработка онтологий
    RELEVANT_NODES[Выбор релевантных<br/>узлов]
    EXTERNAL_LINKS[Запрос внешних связей<br/>для выбранных узлов]

    %% Поиск недостающих данных
    MISSING_NODES[Определение<br/>пересекающихся<br/>численных узлов для<br/>всех онтологий]

    %% Боковая проверка
    PARENT_CHILD_QUERY[Запрос узлов онтологий<br/>дочерних и<br/>родительских<br/>до ближайшего,<br/>который будет<br/>содержать<br/>количественные данные]

    %% Получение индексов
    INDEX_RETRIEVAL[Получение через связи<br/>релевантных индексов]

    %% Финальная генерация
    ANSWER_GENERATION[Генерация ответа]

    %% Связи
    USER_QUERY --> EMBEDDING
    USER_QUERY --> ONTOLOGY_QUERY

    EMBEDDING --> RAG
    ONTOLOGY_QUERY --> RELEVANT_NODES

    RELEVANT_NODES --> EXTERNAL_LINKS
    EXTERNAL_LINKS --> MISSING_NODES

    MISSING_NODES --> |Узлы не найдены| PARENT_CHILD_QUERY
    PARENT_CHILD_QUERY --> EXTERNAL_LINKS

    RAG --> INDEX_RETRIEVAL
    MISSING_NODES --> ANSWER_GENERATION

    INDEX_RETRIEVAL --> ANSWER_GENERATION
```

Метод поиска релевантных данных в БД использует:
- RAG для сопоставления эмбендингов запроса пользователя и формулировок количественных показателей
- Формирование контекста из связей между узлами

Источники информации указаны в метаданных узлов и для идентичных данных будут отображаться в контексте llm в соответствии с запрошенными онтологиями.

**Исключение галлюцинаций в работе llm**

*Пример (нетривиальный). В БД находится информация только о студентах, но не содержит информацию о школах, СПО и ДПО. На запрос пользователя о численности обучающихся llm использует данные из БД для ответа, не уточняя отсутствующие данные.*

Наличие полных онтологий в соответствии с НПА (например, иерархия и связи уровней образования) позволяет llm не только предоставить данные из БД в точной формулировке, но и определить недостающие данные в соответствии с запросом пользователя.


